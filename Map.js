export default class Map {
  constructor() {
    this.tiles = [
      [
        2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 4,
      ],
      [
        8, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
        13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
        13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 7,
      ],
      [
        9, 15, 27, 1, 1, 1, 1, 20, 18, 20, 29, 1, 18, 22, 23, 29, 1, 18, 15, 17,
        19, 17, 25, 15, 14, 29, 21, 15, 16, 26, 27, 16, 24, 27, 15, 19, 19, 18,
        17, 23, 28, 19, 22, 20, 26, 23, 28, 25, 17, 10,
      ],
      [
        9, 29, 24, 18, 23, 17, 22, 28, 1, 29, 1, 19, 24, 29, 1, 28, 16, 14, 25,
        22, 25, 26, 26, 24, 18, 16, 15, 1, 21, 22, 16, 17, 18, 26, 22, 20, 19,
        24, 26, 18, 19, 25, 28, 17, 26, 21, 22, 16, 28, 10,
      ],
      [
        9, 1, 1, 26, 23, 1, 1, 16, 25, 24, 1, 26, 27, 1, 19, 26, 16, 15, 22, 20,
        29, 29, 25, 24, 18, 16, 27, 16, 18, 29, 25, 29, 23, 18, 22, 17, 15, 17,
        19, 18, 27, 1, 23, 17, 25, 19, 22, 20, 15, 10,
      ],
      [
        9, 1, 1, 1, 1, 17, 25, 1, 1, 29, 1, 27, 1, 23, 27, 14, 22, 20, 21, 17,
        17, 14, 27, 27, 26, 18, 20, 21, 24, 16, 27, 19, 14, 25, 24, 22, 15, 18,
        22, 1, 21, 27, 15, 27, 28, 20, 26, 21, 17, 10,
      ],
      [
        9, 1, 1, 1, 1, 14, 22, 1, 1, 23, 23, 23, 25, 1, 14, 22, 16, 15, 16, 22,
        26, 27, 15, 20, 21, 21, 27, 25, 24, 19, 24, 26, 22, 19, 23, 15, 21, 15,
        17, 15, 17, 25, 16, 23, 17, 24, 1, 19, 20, 10,
      ],
      [
        9, 1, 1, 1, 1, 19, 1, 1, 1, 26, 15, 16, 1, 16, 18, 18, 1, 14, 23, 22,
        20, 18, 1, 26, 25, 27, 25, 19, 20, 22, 22, 20, 22, 26, 21, 1, 16, 1, 20,
        19, 28, 14, 22, 24, 23, 1, 19, 24, 27, 10,
      ],
      [
        9, 20, 15, 1, 23, 20, 14, 28, 17, 17, 25, 19, 15, 20, 14, 17, 25, 18,
        29, 29, 29, 17, 18, 28, 15, 29, 28, 28, 15, 1, 21, 21, 20, 20, 1, 22,
        20, 22, 25, 17, 15, 27, 17, 26, 22, 15, 19, 15, 18, 10,
      ],
      [
        9, 19, 20, 18, 19, 24, 26, 15, 23, 1, 21, 23, 15, 22, 19, 14, 15, 15,
        15, 26, 28, 24, 19, 24, 26, 21, 23, 23, 27, 28, 25, 24, 14, 28, 27, 14,
        27, 21, 15, 15, 18, 20, 15, 24, 21, 29, 18, 19, 19, 10,
      ],
      [
        9, 22, 14, 1, 20, 18, 15, 27, 20, 27, 23, 1, 15, 16, 21, 28, 1, 14, 28,
        23, 27, 26, 28, 23, 24, 20, 15, 19, 14, 23, 15, 26, 1, 28, 19, 14, 20,
        17, 20, 25, 29, 14, 14, 1, 27, 1, 26, 25, 28, 10,
      ],
      [
        9, 21, 28, 1, 1, 20, 21, 24, 18, 14, 17, 28, 18, 15, 18, 19, 21, 19, 25,
        15, 28, 25, 25, 21, 15, 15, 24, 22, 27, 26, 20, 24, 25, 14, 22, 15, 16,
        27, 14, 1, 14, 22, 1, 24, 28, 27, 17, 1, 18, 10,
      ],
      [
        9, 1, 27, 29, 1, 22, 17, 18, 29, 17, 27, 25, 18, 24, 14, 23, 17, 18, 1,
        22, 1, 18, 28, 26, 18, 22, 28, 18, 22, 22, 21, 26, 25, 28, 18, 24, 29,
        28, 18, 20, 1, 28, 16, 19, 26, 16, 17, 25, 17, 10,
      ],
      [
        9, 18, 17, 17, 1, 14, 25, 27, 18, 28, 1, 19, 16, 20, 1, 16, 17, 27, 18,
        17, 17, 14, 18, 25, 19, 16, 23, 23, 15, 16, 21, 22, 15, 20, 28, 27, 25,
        16, 20, 1, 20, 25, 27, 27, 1, 22, 1, 20, 19, 10,
      ],
      [
        9, 24, 17, 28, 20, 1, 1, 20, 1, 20, 17, 21, 21, 20, 22, 19, 19, 14, 23,
        24, 1, 14, 19, 23, 14, 27, 20, 26, 15, 22, 25, 29, 21, 16, 21, 20, 26,
        25, 24, 24, 21, 28, 27, 29, 28, 18, 18, 16, 19, 10,
      ],
      [
        9, 19, 20, 18, 25, 14, 29, 16, 26, 16, 1, 20, 1, 20, 17, 25, 27, 24, 27,
        14, 17, 22, 29, 25, 20, 22, 26, 26, 18, 18, 29, 27, 27, 25, 17, 15, 26,
        15, 28, 23, 26, 24, 16, 19, 24, 25, 24, 19, 29, 10,
      ],
      [
        9, 16, 1, 22, 16, 15, 19, 27, 15, 19, 16, 23, 26, 24, 21, 23, 20, 23,
        20, 19, 24, 18, 22, 14, 22, 29, 14, 22, 29, 25, 22, 29, 25, 28, 17, 23,
        26, 26, 22, 29, 19, 25, 15, 29, 25, 17, 19, 16, 16, 10,
      ],
      [
        9, 14, 24, 26, 20, 16, 29, 21, 21, 18, 20, 24, 20, 17, 20, 16, 17, 23,
        16, 29, 17, 24, 22, 20, 29, 18, 24, 21, 21, 26, 1, 14, 16, 17, 25, 20,
        15, 27, 14, 17, 25, 25, 22, 29, 20, 20, 15, 15, 14, 10,
      ],
      [
        9, 14, 19, 20, 14, 16, 29, 24, 14, 17, 21, 28, 29, 15, 27, 20, 16, 25,
        15, 26, 17, 24, 22, 28, 26, 23, 24, 22, 24, 24, 22, 16, 23, 26, 19, 15,
        25, 25, 17, 20, 27, 1, 26, 24, 21, 22, 14, 19, 1, 10,
      ],
      [
        9, 19, 17, 14, 28, 27, 23, 26, 27, 23, 16, 29, 29, 26, 23, 22, 22, 1,
        17, 19, 28, 27, 16, 14, 1, 16, 27, 19, 14, 27, 14, 23, 24, 1, 20, 29,
        15, 14, 15, 18, 18, 18, 1, 18, 26, 1, 21, 23, 21, 10,
      ],
      [
        9, 18, 21, 19, 17, 18, 25, 23, 20, 22, 14, 1, 16, 18, 26, 20, 15, 19,
        14, 1, 15, 26, 18, 19, 19, 28, 24, 27, 26, 1, 22, 24, 15, 27, 23, 20,
        27, 19, 21, 18, 1, 19, 1, 1, 29, 27, 25, 18, 24, 10,
      ],
      [
        9, 22, 28, 25, 15, 21, 28, 27, 23, 29, 18, 20, 25, 23, 27, 28, 20, 23,
        1, 22, 15, 28, 24, 26, 27, 14, 27, 20, 18, 19, 17, 26, 24, 28, 18, 15,
        28, 15, 22, 16, 1, 14, 14, 24, 29, 1, 22, 20, 16, 10,
      ],
      [
        9, 23, 1, 26, 22, 16, 21, 19, 21, 1, 28, 26, 19, 23, 22, 23, 17, 28, 20,
        26, 16, 20, 22, 28, 1, 1, 19, 26, 29, 23, 16, 28, 17, 14, 27, 18, 20,
        15, 18, 20, 27, 20, 16, 17, 21, 15, 21, 23, 17, 10,
      ],
      [
        9, 24, 17, 23, 29, 24, 18, 18, 26, 20, 22, 19, 22, 26, 19, 17, 16, 18,
        14, 15, 24, 15, 18, 18, 18, 19, 22, 16, 25, 21, 29, 21, 15, 16, 23, 21,
        25, 15, 26, 22, 24, 20, 20, 24, 25, 18, 22, 18, 14, 10,
      ],
      [
        9, 23, 20, 28, 26, 29, 27, 1, 17, 29, 24, 14, 27, 16, 15, 14, 21, 1, 14,
        15, 18, 29, 15, 26, 23, 22, 26, 29, 22, 28, 20, 26, 23, 22, 15, 18, 28,
        17, 16, 25, 22, 23, 14, 27, 28, 15, 21, 23, 20, 10,
      ],
      [
        9, 29, 25, 24, 20, 21, 24, 24, 25, 1, 16, 23, 17, 26, 29, 1, 27, 24, 24,
        26, 18, 25, 23, 14, 20, 1, 26, 19, 20, 16, 16, 29, 27, 14, 23, 29, 22,
        14, 17, 18, 17, 21, 20, 1, 24, 17, 29, 19, 29, 10,
      ],
      [
        9, 15, 28, 23, 15, 18, 16, 20, 21, 25, 26, 27, 26, 18, 20, 1, 26, 18,
        23, 27, 20, 17, 14, 19, 26, 22, 1, 28, 27, 17, 17, 1, 21, 24, 19, 25,
        24, 16, 25, 18, 28, 29, 19, 21, 25, 15, 14, 25, 19, 10,
      ],
      [
        9, 17, 17, 19, 15, 15, 24, 20, 17, 23, 18, 19, 24, 29, 23, 22, 22, 23,
        27, 20, 26, 29, 19, 22, 18, 24, 14, 28, 24, 17, 22, 26, 21, 1, 19, 24,
        27, 15, 22, 15, 16, 14, 18, 28, 27, 28, 20, 19, 21, 10,
      ],
      [
        9, 28, 1, 21, 25, 27, 20, 29, 21, 18, 14, 29, 15, 28, 1, 20, 19, 27, 23,
        22, 17, 1, 25, 16, 22, 20, 14, 29, 22, 28, 26, 23, 26, 26, 21, 14, 29,
        18, 28, 24, 22, 29, 16, 1, 1, 21, 14, 29, 28, 10,
      ],
      [
        9, 18, 18, 14, 25, 29, 21, 19, 16, 22, 22, 18, 16, 15, 17, 24, 25, 29,
        24, 16, 1, 22, 25, 28, 29, 17, 1, 29, 28, 17, 14, 18, 24, 20, 22, 1, 18,
        1, 24, 21, 20, 1, 24, 29, 20, 23, 22, 25, 1, 10,
      ],
      [
        9, 29, 16, 29, 14, 24, 29, 22, 26, 16, 28, 21, 16, 21, 1, 24, 22, 27,
        18, 14, 22, 21, 26, 25, 21, 14, 24, 23, 24, 27, 14, 23, 23, 1, 19, 23,
        19, 1, 14, 27, 17, 28, 1, 21, 20, 17, 20, 29, 28, 10,
      ],
      [
        9, 28, 22, 27, 27, 19, 19, 21, 16, 29, 29, 26, 29, 24, 26, 26, 20, 22,
        19, 18, 14, 16, 24, 22, 21, 18, 28, 27, 17, 27, 26, 14, 23, 26, 1, 29,
        19, 19, 26, 21, 18, 29, 17, 29, 25, 20, 15, 15, 17, 10,
      ],
      [
        9, 28, 15, 24, 20, 21, 21, 20, 21, 14, 26, 28, 20, 20, 19, 21, 26, 18,
        19, 16, 21, 27, 20, 16, 23, 15, 19, 21, 19, 19, 19, 17, 23, 26, 18, 21,
        15, 17, 18, 23, 21, 20, 23, 1, 22, 26, 14, 28, 16, 10,
      ],
      [
        9, 1, 26, 26, 20, 1, 15, 18, 26, 18, 15, 16, 26, 23, 15, 24, 28, 15, 19,
        22, 19, 15, 14, 25, 23, 16, 16, 28, 19, 16, 20, 14, 22, 1, 27, 26, 28,
        28, 18, 16, 29, 18, 17, 1, 28, 14, 18, 29, 1, 10,
      ],
      [
        9, 19, 22, 17, 19, 29, 17, 26, 1, 14, 16, 29, 24, 22, 18, 17, 14, 14,
        14, 25, 27, 18, 22, 28, 22, 29, 15, 25, 17, 24, 14, 15, 26, 19, 1, 19,
        19, 27, 26, 23, 14, 15, 20, 28, 26, 22, 24, 20, 19, 10,
      ],
      [
        9, 14, 27, 23, 21, 24, 25, 21, 17, 14, 23, 26, 20, 20, 25, 25, 18, 23,
        18, 19, 19, 24, 14, 18, 22, 16, 16, 23, 1, 17, 20, 23, 28, 17, 15, 22,
        24, 21, 19, 25, 24, 24, 26, 28, 1, 19, 15, 1, 28, 10,
      ],
      [
        9, 19, 1, 15, 18, 22, 15, 26, 29, 28, 15, 16, 29, 28, 24, 27, 29, 21,
        16, 24, 21, 25, 20, 26, 14, 22, 19, 1, 24, 19, 20, 19, 17, 16, 1, 17,
        24, 25, 24, 21, 28, 14, 28, 26, 19, 25, 1, 14, 21, 10,
      ],
      [
        9, 27, 21, 20, 20, 24, 20, 18, 23, 14, 19, 21, 25, 14, 28, 18, 19, 14,
        29, 20, 28, 29, 16, 20, 27, 21, 28, 27, 1, 19, 21, 18, 26, 14, 25, 24,
        24, 18, 23, 25, 29, 23, 24, 22, 15, 19, 24, 15, 28, 10,
      ],
      [
        9, 20, 21, 27, 29, 14, 20, 18, 18, 27, 23, 21, 29, 28, 22, 23, 15, 20,
        20, 14, 22, 18, 20, 22, 14, 1, 19, 29, 21, 17, 15, 15, 21, 17, 19, 17,
        15, 19, 17, 26, 29, 26, 15, 17, 29, 26, 14, 22, 27, 10,
      ],
      [
        9, 18, 22, 29, 28, 29, 27, 21, 25, 14, 23, 28, 18, 18, 16, 27, 16, 16,
        14, 24, 16, 24, 26, 25, 22, 27, 22, 21, 1, 19, 28, 17, 19, 15, 1, 16,
        24, 17, 16, 21, 20, 23, 19, 25, 27, 19, 28, 24, 14, 10,
      ],
      [
        9, 18, 24, 19, 1, 24, 19, 14, 22, 17, 16, 28, 18, 1, 16, 19, 17, 19, 1,
        24, 28, 17, 15, 15, 24, 1, 22, 18, 29, 19, 27, 24, 28, 29, 1, 19, 15,
        21, 28, 16, 24, 15, 14, 16, 23, 16, 15, 20, 17, 10,
      ],
      [
        9, 26, 28, 22, 1, 20, 18, 23, 28, 28, 26, 27, 1, 22, 22, 22, 1, 28, 23,
        15, 18, 29, 22, 28, 23, 18, 27, 26, 29, 17, 17, 20, 19, 15, 19, 23, 1,
        23, 26, 20, 24, 26, 28, 24, 18, 23, 20, 28, 17, 10,
      ],
      [
        9, 24, 16, 22, 20, 28, 28, 23, 22, 1, 19, 17, 26, 15, 23, 23, 1, 26, 24,
        21, 23, 14, 29, 25, 1, 1, 26, 20, 21, 22, 22, 29, 16, 15, 20, 16, 1, 27,
        22, 24, 29, 24, 27, 14, 21, 17, 29, 20, 25, 10,
      ],
      [
        9, 25, 29, 22, 17, 26, 19, 17, 17, 23, 16, 29, 24, 24, 18, 17, 24, 28,
        14, 14, 29, 1, 19, 19, 22, 17, 22, 1, 16, 14, 17, 14, 20, 27, 18, 26,
        15, 15, 14, 23, 14, 1, 16, 23, 17, 21, 26, 25, 28, 10,
      ],
      [
        9, 29, 29, 16, 22, 22, 22, 21, 29, 14, 17, 16, 14, 21, 25, 20, 24, 14,
        22, 15, 16, 25, 26, 22, 27, 28, 25, 26, 17, 1, 17, 27, 17, 28, 17, 24,
        22, 24, 16, 23, 17, 17, 20, 23, 26, 25, 23, 1, 19, 10,
      ],
      [
        9, 18, 1, 16, 21, 22, 22, 16, 29, 17, 21, 20, 21, 25, 16, 1, 24, 29, 17,
        17, 20, 16, 22, 23, 20, 29, 20, 16, 21, 29, 21, 19, 17, 26, 17, 16, 27,
        14, 23, 24, 18, 18, 19, 29, 26, 23, 14, 14, 22, 10,
      ],
      [
        9, 16, 17, 16, 26, 28, 21, 27, 26, 25, 22, 19, 29, 20, 1, 26, 16, 25,
        27, 22, 27, 14, 16, 29, 20, 23, 25, 16, 15, 16, 21, 14, 26, 18, 21, 26,
        24, 29, 14, 18, 29, 20, 28, 22, 18, 29, 17, 28, 21, 10,
      ],
      [
        9, 26, 24, 20, 17, 22, 19, 14, 26, 28, 15, 1, 19, 28, 20, 24, 20, 23,
        22, 23, 27, 17, 19, 27, 19, 29, 15, 14, 26, 16, 29, 17, 23, 28, 1, 1,
        24, 29, 24, 16, 18, 15, 22, 26, 20, 25, 29, 25, 20, 10,
      ],
      [
        5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 6,
      ],
      [
        11, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
        13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
        13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 12,
      ],
    ];
  }

  get getTilesCols() {
    return this.tiles[0].length;
  }
  get getTilesRows() {
    return this.tiles.length;
  }
  get getMapMaxWidth() {
    return this.tiles[0].length * Map.TILE_SIZE;
  }
  get getMapMaxHeight() {
    return this.tiles.length * Map.TILE_SIZE;
  }

  randomPositionX() {
    return (
      Math.random() * (this.getMapMaxWidth - 5 * Map.TILE_SIZE) +
      2 * Map.TILE_SIZE
    );
  }
  randomPositionY() {
    return (
      Math.random() * (this.getMapMaxHeight - 5 * Map.TILE_SIZE) +
      2 * Map.TILE_SIZE
    );
  }

  isWalkable(x, y) {
    const col = Math.floor(x / Map.TILE_SIZE);
    const row = Math.floor(y / Map.TILE_SIZE);

    // Check if the position is within the map boundaries
    if (
      row >= 0 &&
      row < this.tiles.length &&
      col >= 0 &&
      col < this.tiles[0].length
    ) {
      const excludesValue = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];
      return !excludesValue.includes(this.tiles[row][col]);
    }
    return false;
  }

  static TILE_SIZE = 79;
}
